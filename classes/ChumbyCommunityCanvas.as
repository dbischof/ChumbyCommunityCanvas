class ChumbyCommunityCanvas {

	private static var widgetBackgroundColor:Number = 0xCCC08F;
	private static var widgetBorderColor:Number = 0xFFC08F;
	
	private static var colors:Array = new Array( 0x99CC00, 0xFF0000, 0xFFCC00, 0x006699, 0x990099, 0x00CCFF, 0xFF3399 );
	private static var currentColorIndex:Number = 0;
	
	private static var key:Number = null;
	
	public static function main() {
		// Set stage scale mode to keep it from resizing
		//Stage.scaleMode = "noscale";
		
		// draw layout
		drawBackground();
		drawButtons();
			
		// asset ID strings are auto-generated by FDBuild and can be inserted into
		// the currently open code file by double-clicking a resource in the tree view.

		getUpdate();
		setInterval(getUpdate, 5000);
	}
	
	private static function drawBackground():Void {
		//var background:MovieClip = _root.attachMovie("library.texture.png", "background", 0);
		var background:MovieClip = _root.createEmptyMovieClip("background", 0);
		background.beginFill(0x3A3A3A, 100);
		background.moveTo(0, 0);
		background.lineTo(0, 240);
		background.lineTo(320, 240);
		background.lineTo(320, 0);
		background.endFill();
		background._x = 0;
        background._y = 0;
		
		var divider:MovieClip = _root.createEmptyMovieClip("divider", 1);
		divider.beginFill(0xFFFFFF, 70);
		divider.moveTo(0, 0);
		divider.lineTo(0, 225);
		divider.lineTo(2, 225);
		divider.lineTo(2, 0);
		divider.endFill();
		divider._x = 43;
		divider._y = 8;
	}
	
	private static function drawButtons():Void {
		var btn:MovieClip =  null;
		
		for (var i:Number = 0; i < 7; i++) {
			btn = createButton("btnColor" + i, colors[i], 10 + i);
			btn.id = i;
			btn.onPress = function():Void { ChumbyCommunityCanvas.changeColorSelection(this.id); }
			btn._x = 8;
			btn._y = 8 + (i * 33);
		}
		
		for (var i:Number = 0; i < 56; i++) {
			var row:Number = i % 7;
			var column:Number = i % 8;
			
			btn = createButton("btnSquare" + i, 0xFFFFFF, 20 + i);
			btn.id = i + 100;
			btn.onPress = function():Void { ChumbyCommunityCanvas.changeColor(this); }
			btn._x = 53 + (column * 33);
			btn._y = 8 + (row * 33);
		}
		
		btn = _root.createEmptyMovieClip("currentSelectionHalo", 100);
		btn.lineStyle(4, 0xFFFFFF, 100);
		btn.beginFill(0xFFFFFF, 0);
		btn.moveTo(0, 4);
		btn.curveTo(0, 0, 4, 0);
		
		btn.lineTo(23, 0);
		btn.curveTo(27, 0, 27, 4);
        
        btn.lineTo(27, 23);
		btn.curveTo(27, 27, 23, 27);
		
		btn.lineTo(4, 27);
		btn.curveTo(0, 27, 0, 23);
		btn.endFill();
		btn._x = 8;
		btn._y = 8 + (currentColorIndex * 33);
	}
	
	private static function createButton(name:String, color:Number, depth:Number):MovieClip {
		var btn:MovieClip = _root.createEmptyMovieClip(name, depth);
        
		changeSquareColor(btn, color);
		
		return btn;
	}
	
	private static function changeColor(btn:MovieClip):Void {
		changeSquareColor(btn, colors[currentColorIndex]);
		var url:String = getURL() + "&id=" + (btn.id - 100) + "&color=" + currentColorIndex;
		var xml:XML = new XML();
		xml.load(url);
	}
	
	private static function changeSquareColor(btn:MovieClip, color:Number):Void {
		btn.beginFill(color);
        btn.moveTo(0, 4);
		btn.curveTo(0, 0, 4, 0);
		
		btn.lineTo(23, 0);
		btn.curveTo(27, 0, 27, 4);
        
        btn.lineTo(27, 23);
		btn.curveTo(27, 27, 23, 27);
		
		btn.lineTo(4, 27);
		btn.curveTo(0, 27, 0, 23);
		
		/*btn.moveTo(0, 0);
		btn.lineTo(23, 0);
        btn.lineTo(27, 0);
        btn.lineTo(27, 27);
        btn.lineTo(0, 27);*/
		
        btn.endFill();
	}
	
	private static function changeColorSelection(colorIndex:Number):Void {
		currentColorIndex = colorIndex;
		_root.currentSelectionHalo._y = 8 + (currentColorIndex * 33);
	}
	
	private static function getUpdate() {
		var xml:XML = new XML();
		xml.ignoreWhite = true;
		xml.onLoad = function(success:Boolean):Void {
			if (success){
				//trace (xml);				// debug, remove when done
				if (xml.hasChildNodes())
					ChumbyCommunityCanvas.parseUpdate(xml);
			}
			else	
				trace("Connection failure");
		}
		
		var url = getURL();
		if (key != null)
			url += "&key=" + key;
		xml.load(url);
	}
	
	private static function parseUpdate(xml:XML) {
		var parentNode = xml.firstChild;
		key = parentNode.attributes.key;
		
		var	squareNode = null;
		for (var i:Number = 0; i < parentNode.childNodes.length; i++) {
			squareNode = parentNode.childNodes[i];
			var colorIndex:Number = squareNode.attributes.color;
			if (colorIndex >= 0 && colorIndex < colors.length)
				changeSquareColor(_root["btnSquare" + squareNode.attributes.id], colors[colorIndex]);
		}
	}
	
	private static function getURL() {
		var random:Number = Math.floor(Math.random() * 10);
		//return "http://localhost:8080/canvas/ws?r=" + random
		return "http://bluecarton.appspot.com/canvas/ws?r=" + random
	}
}